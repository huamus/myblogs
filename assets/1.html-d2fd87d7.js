const e=JSON.parse('{"key":"v-30518b29","path":"/knowledgeBase/xiaolinCoding/Redis/3.dataTypeChapter/1.html","title":"1. Redis 数据结构","lang":"zh-CN","frontmatter":{"title":"1. Redis 数据结构","description":"Redis 为什么那么快？ 除了它是内存数据库，使得所有的操作都在内存上进行之外，还有一个重要因素，它实现的数据结构，使得我们对数据进行增删查改操作时，Redis 能高效的处理。 因此，这次我们就来好好聊一下 Redis 数据结构，这个在面试中太常问了。 注意，Redis 数据结构并不是指 String（字符串）对象、List（列表）对象、Hash（哈希）对象、Set（集合）对象和 Zset（有序集合）对象，因为这些是 Redis 键值对中值的数据类型，也就是数据的保存形式，这些对象的底层实现的方式就用到了数据结构。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/xiaolinCoding/Redis/3.dataTypeChapter/1.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"1. Redis 数据结构"}],["meta",{"property":"og:description","content":"Redis 为什么那么快？ 除了它是内存数据库，使得所有的操作都在内存上进行之外，还有一个重要因素，它实现的数据结构，使得我们对数据进行增删查改操作时，Redis 能高效的处理。 因此，这次我们就来好好聊一下 Redis 数据结构，这个在面试中太常问了。 注意，Redis 数据结构并不是指 String（字符串）对象、List（列表）对象、Hash（哈希）对象、Set（集合）对象和 Zset（有序集合）对象，因为这些是 Redis 键值对中值的数据类型，也就是数据的保存形式，这些对象的底层实现的方式就用到了数据结构。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T00:56:35.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-07-02T00:56:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Redis 数据结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-02T00:56:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\",\\"url\\":\\"https://huamus.github.io/mynotes/\\"}]}"]]},"headers":[{"level":2,"title":"C 语言字符串的缺陷","slug":"c-语言字符串的缺陷","link":"#c-语言字符串的缺陷","children":[]},{"level":2,"title":"SDS 结构设计","slug":"sds-结构设计","link":"#sds-结构设计","children":[{"level":3,"title":"O（1）复杂度获取字符串长度","slug":"o-1-复杂度获取字符串长度","link":"#o-1-复杂度获取字符串长度","children":[]},{"level":3,"title":"二进制安全","slug":"二进制安全","link":"#二进制安全","children":[]},{"level":3,"title":"不会发生缓冲区溢出","slug":"不会发生缓冲区溢出","link":"#不会发生缓冲区溢出","children":[]},{"level":3,"title":"节省内存空间","slug":"节省内存空间","link":"#节省内存空间","children":[]}]},{"level":2,"title":"链表节点结构设计","slug":"链表节点结构设计","link":"#链表节点结构设计","children":[]},{"level":2,"title":"链表结构设计","slug":"链表结构设计","link":"#链表结构设计","children":[]},{"level":2,"title":"链表的优势与缺陷","slug":"链表的优势与缺陷","link":"#链表的优势与缺陷","children":[]},{"level":2,"title":"压缩列表结构设计","slug":"压缩列表结构设计","link":"#压缩列表结构设计","children":[]},{"level":2,"title":"连锁更新","slug":"连锁更新","link":"#连锁更新","children":[]},{"level":2,"title":"压缩列表的缺陷","slug":"压缩列表的缺陷","link":"#压缩列表的缺陷","children":[]},{"level":2,"title":"哈希表结构设计","slug":"哈希表结构设计","link":"#哈希表结构设计","children":[]},{"level":2,"title":"哈希冲突","slug":"哈希冲突","link":"#哈希冲突","children":[]},{"level":2,"title":"链式哈希","slug":"链式哈希","link":"#链式哈希","children":[]},{"level":2,"title":"rehash","slug":"rehash","link":"#rehash","children":[]},{"level":2,"title":"渐进式 rehash","slug":"渐进式-rehash","link":"#渐进式-rehash","children":[]},{"level":2,"title":"rehash 触发条件","slug":"rehash-触发条件","link":"#rehash-触发条件","children":[]},{"level":2,"title":"整数集合结构设计","slug":"整数集合结构设计","link":"#整数集合结构设计","children":[{"level":3,"title":"整数集合的升级操作","slug":"整数集合的升级操作","link":"#整数集合的升级操作","children":[]}]},{"level":2,"title":"跳表结构设计","slug":"跳表结构设计","link":"#跳表结构设计","children":[]},{"level":2,"title":"跳表节点查询过程","slug":"跳表节点查询过程","link":"#跳表节点查询过程","children":[]},{"level":2,"title":"跳表节点层数设置","slug":"跳表节点层数设置","link":"#跳表节点层数设置","children":[]},{"level":2,"title":"为什么用跳表而不用平衡树？","slug":"为什么用跳表而不用平衡树","link":"#为什么用跳表而不用平衡树","children":[]},{"level":2,"title":"quicklist 结构设计","slug":"quicklist-结构设计","link":"#quicklist-结构设计","children":[]},{"level":2,"title":"listpack 结构设计","slug":"listpack-结构设计","link":"#listpack-结构设计","children":[]}],"git":{"createdTime":1688259395000,"updatedTime":1688259395000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":1}]},"readingTime":{"minutes":50.1,"words":15029},"filePathRelative":"knowledgeBase/xiaolinCoding/Redis/3.dataTypeChapter/1.md","localizedDate":"2023年7月2日","excerpt":"<p><strong>Redis 为什么那么快？</strong></p>\\n<p>除了它是内存数据库，使得所有的操作都在内存上进行之外，还有一个重要因素，它实现的数据结构，使得我们对数据进行增删查改操作时，Redis 能高效的处理。</p>\\n<p>因此，这次我们就来好好聊一下 Redis 数据结构，这个在面试中太常问了。</p>\\n<p>注意，<strong>Redis 数据结构并不是指 String（字符串）对象、List（列表）对象、Hash（哈希）对象、Set（集合）对象和 Zset（有序集合）对象，因为这些是 Redis 键值对中值的数据类型，也就是数据的保存形式，这些对象的底层实现的方式就用到了数据结构</strong>。</p>","autoDesc":true}');export{e as data};
