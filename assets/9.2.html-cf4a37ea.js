const e=JSON.parse('{"key":"v-7ef733a4","path":"/knowledgeBase/xiaolinCoding/operatingSystem/9.networkSystem/9.2.html","title":"最基本的 Socket 模型","lang":"zh-CN","frontmatter":{"0":"9","1":".","2":"2","3":" ","4":"I","5":"/","6":"O","7":" ","8":"多","9":"路","10":"复","11":"用","12":"：","13":"s","14":"e","15":"l","16":"e","17":"c","18":"t","19":"/","20":"p","21":"o","22":"l","23":"l","24":"/","25":"e","26":"p","27":"o","28":"l","29":"l","description":"img 最基本的 Socket 模型 要想客户端和服务器能在网络中通信，那必须得使用 Socket 编程。它是进程间通信里比较特别的方式，特别之处在于它可以跨主机间通信。 Socket 的中文名叫作插口，咋一看还挺迷惑的。事实上，双方要进行网络通信前，各自得创建一个 Socket，这相当于客户端和服务器都开了一个“口子”，双方读取和发送数据的时候，都通过这个“口子”。这样一看，是不是觉得很像弄了一根网线，一头插在客户端，一头插在服务端，然后进行通信。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/xiaolinCoding/operatingSystem/9.networkSystem/9.2.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"最基本的 Socket 模型"}],["meta",{"property":"og:description","content":"img 最基本的 Socket 模型 要想客户端和服务器能在网络中通信，那必须得使用 Socket 编程。它是进程间通信里比较特别的方式，特别之处在于它可以跨主机间通信。 Socket 的中文名叫作插口，咋一看还挺迷惑的。事实上，双方要进行网络通信前，各自得创建一个 Socket，这相当于客户端和服务器都开了一个“口子”，双方读取和发送数据的时候，都通过这个“口子”。这样一看，是不是觉得很像弄了一根网线，一头插在客户端，一头插在服务端，然后进行通信。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-01T13:11:21.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-07-01T13:11:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最基本的 Socket 模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-01T13:11:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\",\\"url\\":\\"https://huamus.github.io/mynotes/\\"}]}"]]},"headers":[{"level":2,"title":"select/poll","slug":"select-poll","link":"#select-poll","children":[]},{"level":2,"title":"epoll","slug":"epoll","link":"#epoll","children":[]},{"level":2,"title":"边缘触发和水平触发","slug":"边缘触发和水平触发","link":"#边缘触发和水平触发","children":[]}],"git":{"createdTime":1688217081000,"updatedTime":1688217081000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":1}]},"readingTime":{"minutes":20.11,"words":6034},"filePathRelative":"knowledgeBase/xiaolinCoding/operatingSystem/9.networkSystem/9.2.md","localizedDate":"2023年7月1日","excerpt":"<figure><img src=\\"https://raw.githubusercontent.com/huamus/picture-bed/main/img202307010738244.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<h1> 最基本的 Socket 模型</h1>\\n<p><strong>要想客户端和服务器能在网络中通信，那必须得使用 Socket 编程。它是进程间通信里比较特别的方式，特别之处在于它可以跨主机间通信。</strong></p>\\n<p>Socket 的中文名叫作插口，咋一看还挺迷惑的。事实上，双方要进行网络通信前，各自得创建一个 Socket，这相当于客户端和服务器都开了一个“口子”，双方读取和发送数据的时候，都通过这个“口子”。这样一看，是不是觉得很像弄了一根网线，一头插在客户端，一头插在服务端，然后进行通信。</p>","autoDesc":true}');export{e as data};
