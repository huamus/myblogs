const e=JSON.parse('{"key":"v-24a3ea3c","path":"/knowledgeBase/technicalArticleExtract/Java/designPattern/designPatternCanBeSimple.html","title":"设计模式也可以这么简单","lang":"zh-CN","frontmatter":{"title":"设计模式也可以这么简单","author":"huamus","isOriginal":false,"data":"2023-7-20","description":"原文链接：https://www.javadoop.com/post/design-pattern 作者：Javadoop 设计模式是对大家实际工作中写的各种代码进行高层次抽象的总结，其中最出名的当属 Gang of Four (GoF) 的分类了，他们将设计模式分类为 23 种经典的模式，根据用途我们又可以分为三大类，分别为创建型模式、结构型模式和行为型模式。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/technicalArticleExtract/Java/designPattern/designPatternCanBeSimple.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"设计模式也可以这么简单"}],["meta",{"property":"og:description","content":"原文链接：https://www.javadoop.com/post/design-pattern 作者：Javadoop 设计模式是对大家实际工作中写的各种代码进行高层次抽象的总结，其中最出名的当属 Gang of Four (GoF) 的分类了，他们将设计模式分类为 23 种经典的模式，根据用途我们又可以分为三大类，分别为创建型模式、结构型模式和行为型模式。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T08:36:07.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-07-21T08:36:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式也可以这么简单\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-21T08:36:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\"}]}"]]},"headers":[{"level":2,"title":"创建型模式","slug":"创建型模式","link":"#创建型模式","children":[{"level":3,"title":"简单工厂模式","slug":"简单工厂模式","link":"#简单工厂模式","children":[]},{"level":3,"title":"工厂模式","slug":"工厂模式","link":"#工厂模式","children":[]},{"level":3,"title":"抽象工厂模式","slug":"抽象工厂模式","link":"#抽象工厂模式","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]},{"level":3,"title":"建造者模式","slug":"建造者模式","link":"#建造者模式","children":[]},{"level":3,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]},{"level":3,"title":"创建型模式总结","slug":"创建型模式总结","link":"#创建型模式总结","children":[]}]},{"level":2,"title":"结构型模式","slug":"结构型模式","link":"#结构型模式","children":[{"level":3,"title":"代理模式","slug":"代理模式","link":"#代理模式","children":[]},{"level":3,"title":"适配器模式","slug":"适配器模式","link":"#适配器模式","children":[]},{"level":3,"title":"桥梁模式","slug":"桥梁模式","link":"#桥梁模式","children":[]},{"level":3,"title":"装饰模式","slug":"装饰模式","link":"#装饰模式","children":[]},{"level":3,"title":"门面模式","slug":"门面模式","link":"#门面模式","children":[]},{"level":3,"title":"组合模式","slug":"组合模式","link":"#组合模式","children":[]},{"level":3,"title":"享元模式","slug":"享元模式","link":"#享元模式","children":[]},{"level":3,"title":"结构型模式总结","slug":"结构型模式总结","link":"#结构型模式总结","children":[]}]},{"level":2,"title":"行为型模式","slug":"行为型模式","link":"#行为型模式","children":[{"level":3,"title":"策略模式","slug":"策略模式","link":"#策略模式","children":[]},{"level":3,"title":"观察者模式","slug":"观察者模式","link":"#观察者模式","children":[]},{"level":3,"title":"责任链模式","slug":"责任链模式","link":"#责任链模式","children":[]},{"level":3,"title":"模板方法模式","slug":"模板方法模式","link":"#模板方法模式","children":[]},{"level":3,"title":"状态模式","slug":"状态模式","link":"#状态模式","children":[]},{"level":3,"title":"行为型模式总结","slug":"行为型模式总结","link":"#行为型模式总结","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1689852607000,"updatedTime":1689928567000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":5}]},"readingTime":{"minutes":38.06,"words":11418},"filePathRelative":"knowledgeBase/technicalArticleExtract/Java/designPattern/designPatternCanBeSimple.md","localizedDate":"2023年7月20日","excerpt":"<blockquote>\\n<p>原文链接：<a href=\\"https://www.javadoop.com/post/design-pattern\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.javadoop.com/post/design-pattern</a></p>\\n<p>作者：Javadoop</p>\\n</blockquote>\\n<p>设计模式是对大家实际工作中写的各种代码进行高层次抽象的总结，其中最出名的当属 Gang of Four (GoF) 的分类了，他们将设计模式分类为 23 种经典的模式，根据用途我们又可以分为三大类，分别为创建型模式、结构型模式和行为型模式。</p>","autoDesc":true}');export{e as data};
