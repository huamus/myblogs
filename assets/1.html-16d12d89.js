const e=JSON.parse('{"key":"v-12c38619","path":"/knowledgeBase/xiaolinCoding/4.Redis/6.highAvailabilityChapter/1.html","title":"1. 主从复制是怎么实现的？","lang":"zh-CN","frontmatter":{"title":"1. 主从复制是怎么实现的？","description":"我在前两篇已经给大家图解了 AOF 和 RDB，这两个持久化技术保证了即使在服务器重启的情况下也不会丢失数据（或少量损失）。 不过，由于数据都是存储在一台服务器上，如果出事就完犊子了，比如： 如果服务器发生了宕机，由于数据恢复需要时间，那么这个期间是无法服务新的请求的； 如果这台服务器的硬盘出现了故障，可能数据就都丢失了。 要避免这种单点故障，最好的办法是将数据备份到其他服务器上，让这些服务器也可以对外提供服务，这样即使有一台服务器出现了故障，其他服务器依然可以继续提供服务。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/xiaolinCoding/4.Redis/6.highAvailabilityChapter/1.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"1. 主从复制是怎么实现的？"}],["meta",{"property":"og:description","content":"我在前两篇已经给大家图解了 AOF 和 RDB，这两个持久化技术保证了即使在服务器重启的情况下也不会丢失数据（或少量损失）。 不过，由于数据都是存储在一台服务器上，如果出事就完犊子了，比如： 如果服务器发生了宕机，由于数据恢复需要时间，那么这个期间是无法服务新的请求的； 如果这台服务器的硬盘出现了故障，可能数据就都丢失了。 要避免这种单点故障，最好的办法是将数据备份到其他服务器上，让这些服务器也可以对外提供服务，这样即使有一台服务器出现了故障，其他服务器依然可以继续提供服务。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-02T14:35:37.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-07-02T14:35:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. 主从复制是怎么实现的？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-02T14:35:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\",\\"url\\":\\"https://huamus.github.io/mynotes/\\"}]}"]]},"headers":[{"level":2,"title":"Redis主从节点是长连接还是短连接？","slug":"redis主从节点是长连接还是短连接","link":"#redis主从节点是长连接还是短连接","children":[]},{"level":2,"title":"怎么判断 Redis 某个节点是否正常工作？","slug":"怎么判断-redis-某个节点是否正常工作","link":"#怎么判断-redis-某个节点是否正常工作","children":[]},{"level":2,"title":"主从复制架构中，过期key如何处理？","slug":"主从复制架构中-过期key如何处理","link":"#主从复制架构中-过期key如何处理","children":[]},{"level":2,"title":"Redis 是同步复制还是异步复制？","slug":"redis-是同步复制还是异步复制","link":"#redis-是同步复制还是异步复制","children":[]},{"level":2,"title":"主从复制中两个 Buffer(replication buffer 、repl backlog buffer)有什么区别？","slug":"主从复制中两个-buffer-replication-buffer-、repl-backlog-buffer-有什么区别","link":"#主从复制中两个-buffer-replication-buffer-、repl-backlog-buffer-有什么区别","children":[]},{"level":2,"title":"如何应对主从数据不一致？","slug":"如何应对主从数据不一致","link":"#如何应对主从数据不一致","children":[]},{"level":2,"title":"主从切换如何减少数据丢失？","slug":"主从切换如何减少数据丢失","link":"#主从切换如何减少数据丢失","children":[{"level":3,"title":"异步复制同步丢失","slug":"异步复制同步丢失","link":"#异步复制同步丢失","children":[]},{"level":3,"title":"集群产生脑裂数据丢失","slug":"集群产生脑裂数据丢失","link":"#集群产生脑裂数据丢失","children":[]}]},{"level":2,"title":"主从如何做到故障自动切换？","slug":"主从如何做到故障自动切换","link":"#主从如何做到故障自动切换","children":[]}],"git":{"createdTime":1688308537000,"updatedTime":1688308537000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":1}]},"readingTime":{"minutes":22.95,"words":6884},"filePathRelative":"knowledgeBase/xiaolinCoding/4.Redis/6.highAvailabilityChapter/1.md","localizedDate":"2023年7月2日","excerpt":"<p>我在前两篇已经给大家图解了 AOF 和 RDB，这两个持久化技术保证了即使在服务器重启的情况下也不会丢失数据（或少量损失）。</p>\\n<p>不过，由于数据都是存储在一台服务器上，如果出事就完犊子了，比如：</p>\\n<ul>\\n<li><strong>如果服务器发生了宕机，由于数据恢复需要时间，那么这个期间是无法服务新的请求的；</strong></li>\\n<li><strong>如果这台服务器的硬盘出现了故障，可能数据就都丢失了。</strong></li>\\n</ul>\\n<p>要避免这种<strong>单点故障</strong>，最好的办法是将数据备份到其他服务器上，让这些服务器也可以对外提供服务，这样即使有一台服务器出现了故障，其他服务器依然可以继续提供服务。</p>","autoDesc":true}');export{e as data};
