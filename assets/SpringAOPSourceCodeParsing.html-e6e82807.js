const e=JSON.parse('{"key":"v-57d080b8","path":"/knowledgeBase/technicalArticleExtract/Spring/SpringAOPSourceCodeParsing.html","title":"Spring AOP 源码解析","lang":"zh-CN","frontmatter":{"title":"Spring AOP 源码解析","author":"huamus","isOrigial":false,"data":"2023-7-21","description":"原文链接：https://www.javadoop.com/post/spring-aop-source 作者：javadoop 本文不会像 IOC 源码分析那篇文章一样，很具体地分析每一行 Spring AOP 的源码，目标读者是已经知道 Spring IOC 源码是怎么回事的读者，因为 Spring AOP 终归是依赖于 IOC 容器来管理的。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/technicalArticleExtract/Spring/SpringAOPSourceCodeParsing.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"Spring AOP 源码解析"}],["meta",{"property":"og:description","content":"原文链接：https://www.javadoop.com/post/spring-aop-source 作者：javadoop 本文不会像 IOC 源码分析那篇文章一样，很具体地分析每一行 Spring AOP 的源码，目标读者是已经知道 Spring IOC 源码是怎么回事的读者，因为 Spring AOP 终归是依赖于 IOC 容器来管理的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T08:36:07.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-07-21T08:36:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring AOP 源码解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-21T08:36:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\"}]}"]]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"本文使用的调试代码","slug":"本文使用的调试代码","link":"#本文使用的调试代码","children":[]},{"level":2,"title":"IOC 容器管理 AOP 实例","slug":"ioc-容器管理-aop-实例","link":"#ioc-容器管理-aop-实例","children":[]},{"level":2,"title":"ProxyFactory 详解","slug":"proxyfactory-详解","link":"#proxyfactory-详解","children":[]},{"level":2,"title":"基于注解的 Spring AOP 源码分析","slug":"基于注解的-spring-aop-源码分析","link":"#基于注解的-spring-aop-源码分析","children":[]},{"level":2,"title":"闲聊 InstantiationAwareBeanPostProcessor","slug":"闲聊-instantiationawarebeanpostprocessor","link":"#闲聊-instantiationawarebeanpostprocessor","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1689928567000,"updatedTime":1689928567000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":1}]},"readingTime":{"minutes":14.87,"words":4461},"filePathRelative":"knowledgeBase/technicalArticleExtract/Spring/SpringAOPSourceCodeParsing.md","localizedDate":"2023年7月21日","excerpt":"<blockquote>\\n<p>原文链接：<a href=\\"https://www.javadoop.com/post/spring-aop-source\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://www.javadoop.com/post/spring-aop-source</a></p>\\n<p>作者：javadoop</p>\\n</blockquote>\\n<p>本文不会像 IOC 源码分析那篇文章一样，很具体地分析每一行 Spring AOP 的源码，目标读者是已经知道 Spring IOC 源码是怎么回事的读者，因为 Spring AOP 终归是依赖于 IOC 容器来管理的。</p>","autoDesc":true}');export{e as data};
