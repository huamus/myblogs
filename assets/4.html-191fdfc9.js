const e=JSON.parse('{"key":"v-aa4d896c","path":"/knowledgeBase/xiaolinCoding/3.MySQL/3.indexChapter/4.html","title":"4. 索引失效有哪些？","lang":"zh-CN","frontmatter":{"title":"4. 索引失效有哪些？","author":"huamus","isOriginal":false,"data":"2023-8-7","description":"原文链接：https://xiaolincoding.com/ 作者：小林coding 在工作中，如果我们想提高一条语句查询速度，通常都会想对字段建立索引。 但是索引并不是万能的。建立了索引，并不意味着任何查询语句都能走索引扫描。 稍不注意，可能你写的查询语句是会导致索引失效，从而走了全表扫描，虽然查询的结果没问题，但是查询的性能大大降低。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblogs/knowledgeBase/xiaolinCoding/3.MySQL/3.indexChapter/4.html"}],["meta",{"property":"og:site_name","content":"huamus"}],["meta",{"property":"og:title","content":"4. 索引失效有哪些？"}],["meta",{"property":"og:description","content":"原文链接：https://xiaolincoding.com/ 作者：小林coding 在工作中，如果我们想提高一条语句查询速度，通常都会想对字段建立索引。 但是索引并不是万能的。建立了索引，并不意味着任何查询语句都能走索引扫描。 稍不注意，可能你写的查询语句是会导致索引失效，从而走了全表扫描，虽然查询的结果没问题，但是查询的性能大大降低。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-29T08:17:07.000Z"}],["meta",{"property":"article:author","content":"huamus"}],["meta",{"property":"article:modified_time","content":"2023-08-29T08:17:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4. 索引失效有哪些？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-29T08:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"huamus\\"}]}"]]},"headers":[{"level":2,"title":"索引存储结构长什么样？","slug":"索引存储结构长什么样","link":"#索引存储结构长什么样","children":[]},{"level":2,"title":"对索引使用左或者左右模糊匹配","slug":"对索引使用左或者左右模糊匹配","link":"#对索引使用左或者左右模糊匹配","children":[]},{"level":2,"title":"对索引使用函数","slug":"对索引使用函数","link":"#对索引使用函数","children":[]},{"level":2,"title":"对索引进行表达式计算","slug":"对索引进行表达式计算","link":"#对索引进行表达式计算","children":[]},{"level":2,"title":"对索引隐式类型转换","slug":"对索引隐式类型转换","link":"#对索引隐式类型转换","children":[]},{"level":2,"title":"联合索引非最左匹配","slug":"联合索引非最左匹配","link":"#联合索引非最左匹配","children":[]},{"level":2,"title":"WHERE 子句中的 OR","slug":"where-子句中的-or","link":"#where-子句中的-or","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1688308537000,"updatedTime":1693297027000,"contributors":[{"name":"huamus","email":"1943805462@qq.com","commits":2}]},"readingTime":{"minutes":15.48,"words":4644},"filePathRelative":"knowledgeBase/xiaolinCoding/3.MySQL/3.indexChapter/4.md","localizedDate":"2023年7月2日","excerpt":"<blockquote>\\n<p>原文链接：<a href=\\"https://xiaolincoding.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://xiaolincoding.com/</a></p>\\n<p>作者：小林coding</p>\\n</blockquote>\\n<p>在工作中，如果我们想提高一条语句查询速度，通常都会想对字段建立索引。</p>\\n<p>但是索引并不是万能的。建立了索引，并不意味着任何查询语句都能走索引扫描。</p>\\n<p>稍不注意，可能你写的查询语句是会导致索引失效，从而走了全表扫描，虽然查询的结果没问题，但是查询的性能大大降低。</p>","autoDesc":true}');export{e as data};
